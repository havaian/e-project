@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Brand colors from environment variables - set dynamically by JavaScript */
    --color-brand-1: #000000; /* Will be overridden by JS */
    --color-brand-2: #333333; /* Will be overridden by JS */
    --color-brand-3: #666666; /* Will be overridden by JS */
    --color-brand-4: #999999; /* Will be overridden by JS */
    --color-brand-5: #cccccc; /* Will be overridden by JS */
    --color-success: 34 197 94; /* Will be overridden by JS */
    --color-warning: 234 179 8; /* Will be overridden by JS */
    --color-error: 239 68 68; /* Will be overridden by JS */

    /* Legacy support - keeping old variables for compatibility */
    --primary: var(--color-brand-1);
    --secondary: var(--color-brand-2);
    --accent: var(--color-brand-3);

    /* Educational theme fallbacks */
    --color1: var(--color-brand-1);
    --success: var(--color-success);
    --color2: var(--color-brand-2);
    --color3: var(--color-brand-3);
    --color4: var(--color-brand-4);
    --color5: var(--color-brand-5);
  }

  html {
    @apply antialiased;
  }

  body {
    @apply text-gray-900;
  }

  .min-h-screen {
    min-height: 78vh !important;
  }

  /* Dynamic gradient background using brand colors */
  .element-gradient {
    background: linear-gradient(135deg, 
      color-mix(in srgb, var(--color-brand-1) 20%, #f0f9ff 80%) 0%, 
      color-mix(in srgb, var(--color-brand-2) 10%, #ecfdf5 90%) 25%, 
      color-mix(in srgb, var(--color-brand-3) 15%, #f0f9ff 85%) 50%, 
      color-mix(in srgb, var(--color-brand-1) 25%, #e0f2fe 75%) 75%, 
      #f0f9ff 100%);
  }
}

@layer components {
  /* Base transition utilities - defined first to avoid conflicts */
  .transition-buttery {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    transition-duration: 400ms;
  }

  .transition-smooth {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 350ms;
  }

  .transition-silk {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
    transition-duration: 450ms;
  }

  /* Base button component */
  .btn {
    @apply inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-buttery duration-200;
  }

  /* Updated primary button with brand colors */
  .btn-primary {
    @apply btn text-white shadow-lg;
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2));
    box-shadow: 0 10px 25px color-mix(in srgb, var(--color-brand-1) 15%, transparent);
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, var(--color-brand-2), var(--color-brand-1));
    transform: translateY(-1px);
    box-shadow: 0 15px 35px color-mix(in srgb, var(--color-brand-1) 20%, transparent);
  }

  .btn-primary:focus {
    @apply ring-4;
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
  }

  /* Brand-themed secondary button */
  .btn-secondary {
    @apply btn text-gray-700 border-gray-300 hover:bg-gray-50 focus:ring-4;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    border-color: color-mix(in srgb, var(--color-brand-1) 20%, transparent);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 1);
    border-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
    transform: translateY(-1px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .btn-secondary:focus {
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
  }

  /* Brand-themed button variants */
  .btn-element-primary {
    @apply btn text-white font-semibold rounded-2xl shadow-lg;
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-3));
    padding: 1rem 2rem;
    box-shadow: 0 20px 40px color-mix(in srgb, var(--color-brand-1) 15%, transparent);
  }

  .btn-element-primary:hover {
    background: linear-gradient(135deg, var(--color-brand-3), var(--color-brand-1));
    transform: translateY(-2px);
    box-shadow: 0 25px 50px color-mix(in srgb, var(--color-brand-1) 20%, transparent);
  }

  .btn-element-primary:focus {
    @apply ring-4;
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
  }

  .btn-element-secondary {
    @apply btn font-semibold rounded-2xl shadow-lg border-2;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    color: var(--color-brand-1);
    border-color: color-mix(in srgb, var(--color-brand-1) 20%, transparent);
    padding: 1rem 2rem;
  }

  .btn-element-secondary:hover {
    background: rgba(255, 255, 255, 1);
    border-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
    transform: translateY(-2px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
  }

  .btn-element-secondary:focus {
    @apply ring-4;
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
  }

  /* Enhanced input components */
  .input {
    @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm transition-buttery duration-200;
  }

  .input:focus {
    border-color: var(--color-brand-1);
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-brand-1) 10%, transparent);
  }

  /* Brand-themed input variant */
  .input-item {
    @apply block w-full border-2 border-gray-200 rounded-2xl px-6 py-4 text-gray-900 text-lg transition-buttery duration-200;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
  }

  .input-item:focus {
    @apply ring-2 outline-none;
    border-color: var(--color-brand-1);
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
    background: rgba(255, 255, 255, 1);
  }

  .label {
    @apply block text-sm font-medium text-gray-700;
  }

  /* Brand-themed label variant */
  .label-item {
    @apply block text-base font-semibold mb-2;
    color: var(--color-brand-1);
  }

  /* Card components with brand theme */
  .card {
    @apply bg-white rounded-lg shadow-md border border-gray-200 transition-buttery duration-200;
  }

  .card:hover {
    @apply shadow-lg;
    transform: translateY(-2px);
  }

  .card-element {
    @apply rounded-2xl shadow-lg border transition-buttery duration-300;
    background: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(8px);
    border-color: color-mix(in srgb, var(--color-brand-1) 10%, transparent);
  }

  /* Brand gradient text */
  .text-gradient-element {
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Glow effects with brand colors */
  .glow-effect {
    box-shadow: 0 20px 40px color-mix(in srgb, var(--color-brand-1) 15%, transparent);
  }

  .glow-green {
    box-shadow: 0 20px 40px rgba(var(--color-success), 0.15);
  }

  .glow-brand {
    box-shadow: 0 20px 40px color-mix(in srgb, var(--color-brand-2) 15%, transparent);
  }

  /* Educational animations */
  .pulse-animation {
    animation: pulse 3s ease-in-out infinite;
  }

  .float-element {
    animation: floatElement 4s ease-in-out infinite;
  }

  .slide-in {
    animation: slideIn 1.2s ease-out;
  }

  .heartbeat {
    animation: heartbeat 2s ease-in-out infinite;
  }

  /* Status indicators with brand colors */
  .status-success {
    @apply inline-flex items-center px-3 py-1 rounded-full text-sm font-medium;
    background: rgba(var(--color-success), 0.1);
    color: rgb(var(--color-success));
  }

  .status-warning {
    @apply inline-flex items-center px-3 py-1 rounded-full text-sm font-medium;
    background: rgba(var(--color-warning), 0.1);
    color: rgb(var(--color-warning));
  }

  .status-error {
    @apply inline-flex items-center px-3 py-1 rounded-full text-sm font-medium;
    background: rgba(var(--color-error), 0.1);
    color: rgb(var(--color-error));
  }

  .status-info {
    @apply inline-flex items-center px-3 py-1 rounded-full text-sm font-medium;
    background: color-mix(in srgb, var(--color-brand-1) 10%, transparent);
    color: var(--color-brand-1);
  }
}

@layer utilities {

  /* Brand color utilities */
  .text-brand-1 {
    color: var(--color-brand-1);
  }

  .text-brand-2 {
    color: var(--color-brand-2);
  }

  .text-brand-3 {
    color: var(--color-brand-3);
  }

  .text-brand-4 {
    color: var(--color-brand-4);
  }

  .text-brand-5 {
    color: var(--color-brand-5);
  }

  .bg-brand-1 {
    background-color: var(--color-brand-1);
  }

  .bg-brand-2 {
    background-color: var(--color-brand-2);
  }

  .bg-brand-3 {
    background-color: var(--color-brand-3);
  }

  .bg-brand-4 {
    background-color: var(--color-brand-4);
  }

  .bg-brand-5 {
    background-color: var(--color-brand-5);
  }

  /* Brand gradient backgrounds */
  .bg-gradient-brand {
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2));
  }

  .bg-gradient-brand-reverse {
    background: linear-gradient(135deg, var(--color-brand-2), var(--color-brand-1));
  }

  .bg-gradient-brand-multi {
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2), var(--color-brand-3));
  }
}

/* Keyframe animations */
@keyframes floatElement {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  25% {
    transform: translateY(-10px) rotate(1deg);
  }
  50% {
    transform: translateY(-15px) rotate(0deg);
  }
  75% {
    transform: translateY(-10px) rotate(-1deg);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes heartbeat {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@layer utilities {
  /* Background colors */
  .bg-success {
    background-color: rgb(var(--color-success-rgb));
  }
  
  .bg-color1 {
    background-color: rgb(var(--color1-rgb));
  }
  
  .bg-color2 {
    background-color: rgb(var(--color2-rgb));
  }
  
  .bg-color3 {
    background-color: rgb(var(--color3-rgb));
  }
  
  /* Text colors */
  .text-success {
    color: rgb(var(--color-success-rgb));
  }
  
  .text-color1 {
    color: rgb(var(--color1-rgb));
  }
  
  .text-color2 {
    color: rgb(var(--color2-rgb));
  }
  
  .text-color3 {
    color: rgb(var(--color3-rgb));
  }
  
  /* Gradient from colors */
  .from-success {
    --tw-gradient-from: rgb(var(--color-success-rgb));
    --tw-gradient-to: rgb(var(--color1-rgb) / 50);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
  
  .from-color1 {
    --tw-gradient-from: rgb(var(--color1-rgb));
    --tw-gradient-to: rgb(var(--color-success-rgb) / 50);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
  
  .from-color2 {
    --tw-gradient-from: rgb(var(--color2-rgb));
    --tw-gradient-to: rgb(var(--color2-rgb) / 50);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
  
  .from-color3 {
    --tw-gradient-from: rgb(var(--color3-rgb));
    --tw-gradient-to: rgb(var(--color3-rgb) / 50);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
  
  /* Gradient to colors */
  .to-success {
    --tw-gradient-to: rgb(var(--color-success-rgb));
  }
  
  .to-color1 {
    --tw-gradient-to: rgb(var(--color1-rgb));
  }
  
  .to-color2 {
    --tw-gradient-to: rgb(var(--color2-rgb));
  }
  
  .to-color3 {
    --tw-gradient-to: rgb(var(--color3-rgb));
  }
  
  /* Border colors */
  .border-color1\/20 {
    border-color: rgb(var(--color1-rgb) / 0.2);
  }
  
  .border-color1\/30 {
    border-color: rgb(var(--color1-rgb) / 0.3);
  }
  
  /* Ring colors */
  .ring-color1\/30 {
    --tw-ring-color: rgb(var(--color1-rgb) / 0.3);
  }
  
  /* Focus ring colors */
  .focus\:ring-color1\/30:focus {
    --tw-ring-color: rgb(var(--color1-rgb) / 0.3);
  }

  /* Base input styling - applies to all inputs */
  .input {
    @apply block w-full border-2 border-gray-200 rounded-2xl px-4 py-2 text-gray-900 text-base transition-buttery duration-200 placeholder-gray-400;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    font-weight: 500;
  }

  .input:focus {
    @apply ring-2 outline-none;
    border-color: var(--color-brand-1);
    ring-color: color-mix(in srgb, var(--color-brand-1) 20%, transparent);
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-brand-1) 10%, transparent);
  }

  .input:hover {
    border-color: color-mix(in srgb, var(--color-brand-1) 30%, #d1d5db);
  }

  /* Input validation states */
  .input.error {
    border-color: rgb(var(--color-error));
    ring-color: color-mix(in srgb, rgb(var(--color-error)) 20%, transparent);
  }

  .input.error:focus {
    border-color: rgb(var(--color-error));
    ring-color: color-mix(in srgb, rgb(var(--color-error)) 20%, transparent);
    box-shadow: 0 0 0 3px color-mix(in srgb, rgb(var(--color-error)) 10%, transparent);
  }

  .input.success {
    border-color: rgb(var(--color-success));
    ring-color: color-mix(in srgb, rgb(var(--color-success)) 20%, transparent);
  }

  .input.success:focus {
    border-color: rgb(var(--color-success));
    ring-color: color-mix(in srgb, rgb(var(--color-success)) 20%, transparent);
    box-shadow: 0 0 0 3px color-mix(in srgb, rgb(var(--color-success)) 10%, transparent);
  }

  /* Enhanced labels */
  .label {
    @apply block text-base font-semibold mb-2;
    color: var(--color-brand-1);
  }

  /* Textarea styling to match inputs */
  textarea.input {
    @apply resize-none;
    min-height: 120px;
  }

  /* Select styling to match inputs */
  select.input {
    @apply cursor-pointer;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 1.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 3rem;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }

  /* Input group styling for inputs with icons/buttons */
  .input-group {
    @apply relative;
  }

  .input-group .input {
    padding-right: 3rem;
  }

  .input-group .input-icon {
    @apply absolute inset-y-0 right-0 flex items-center px-4 text-gray-400 transition-colors duration-200;
  }

  .input-group .input-icon:hover {
    color: var(--color-brand-1);
  }

  .input-group .input-icon.active {
    color: var(--color-brand-1);
  }

  /* Enhanced button styling to match the new input design */
  .btn-primary {
    @apply btn text-white font-semibold rounded-2xl shadow-lg transition-buttery duration-200;
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2));
    box-shadow: 0 10px 25px color-mix(in srgb, var(--color-brand-1) 15%, transparent);
    padding: 1rem 2rem;
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, var(--color-brand-2), var(--color-brand-1));
    transform: translateY(-1px);
    box-shadow: 0 15px 35px color-mix(in srgb, var(--color-brand-1) 20%, transparent);
  }

  .btn-primary:focus {
    @apply ring-4 outline-none;
    ring-color: color-mix(in srgb, var(--color-brand-1) 30%, transparent);
  }

  .btn-primary:disabled {
    @apply opacity-60 cursor-not-allowed;
    transform: none;
    box-shadow: 0 5px 15px color-mix(in srgb, var(--color-brand-1) 10%, transparent);
  }

  /* Error message styling */
  .error-message {
    @apply mt-2 text-sm text-red-600 flex items-center;
  }

  .error-message svg {
    @apply h-4 w-4 mr-1 flex-shrink-0;
  }

  /* Success message styling */
  .success-message {
    @apply mt-2 text-sm flex items-center;
    color: rgb(var(--color-success));
  }

  .success-message svg {
    @apply h-4 w-4 mr-1 flex-shrink-0;
  }

  /* Enhanced form containers */
  .form-container {
    @apply space-y-6;
  }

  .form-group {
    @apply space-y-2;
  }

  /* Loading states */
  .input:disabled {
    @apply opacity-60 cursor-not-allowed;
    background: rgba(255, 255, 255, 0.6);
  }

  /* Compact input variant */
  .input-compact {
    @apply px-4 py-3 text-sm rounded-xl;
  }

  /* Large input variant */
  .input-large {
    @apply px-8 py-5 text-lg rounded-3xl;
  }
  
  /* Override default transition-buttery with smoother, more natural transitions */
  .transition-buttery {
    transition-property: all;
    transition-timing-function: ease-in-out;
    transition-duration: 2s;
  }

  /* Enhanced smooth transition variants */
  .transition-smooth {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 350ms;
  }

  .transition-buttery {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    transition-duration: 400ms;
  }

  .transition-silk {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
    transition-duration: 450ms;
  }

  /* Specific smooth transitions for common properties */
  .transition-transform-smooth {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 350ms;
  }

  .transition-colors-smooth {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 250ms;
  }

  .transition-shadow-smooth {
    transition-property: box-shadow;
    transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 300ms;
  }

  /* Hover state transition improvements */
  .hover-lift {
    transition: all 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .hover-lift:hover {
    transform: translateY(-4px) scale(1.02);
  }

  /* Card hover improvements */
  .card-hover-smooth {
    transition: all 0.4s cubic-bezier(0.25, 0.1, 0.25, 1);
  }

  .card-hover-smooth:hover {
    transform: translateY(-6px) scale(1.01);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
  }

  /* Button hover improvements */
  .btn-hover-smooth {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .btn-hover-smooth:hover {
    transform: translateY(-2px) scale(1.05);
  }

  .btn-hover-smooth:active {
    transform: translateY(0) scale(0.98);
    transition-duration: 150ms;
  }
  
  /* Smooth card element override */
  .card-element {
    @apply rounded-2xl shadow-lg border transition-smooth;
    background: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(8px);
    border-color: color-mix(in srgb, var(--color-brand-1) 10%, transparent);
  }

  /* Smooth button transitions */
  .btn-primary {
    @apply btn text-white font-semibold rounded-2xl shadow-lg transition-buttery;
    background: linear-gradient(135deg, var(--color-brand-1), var(--color-brand-2));
    box-shadow: 0 10px 25px color-mix(in srgb, var(--color-brand-1) 15%, transparent);
    padding: 1rem 2rem;
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, var(--color-brand-2), var(--color-brand-1));
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 20px 40px color-mix(in srgb, var(--color-brand-1) 25%, transparent);
  }

  .btn-primary:active {
    transform: translateY(0) scale(0.98);
    transition-duration: 150ms;
  }

  .btn-secondary {
    @apply btn bg-white text-gray-700 border-gray-300 transition-smooth;
  }

  .btn-secondary:hover {
    @apply bg-gray-50 border-gray-400;
    transform: translateY(-1px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  /* Smooth input transitions */
  .input {
    @apply block w-full border-2 border-gray-200 rounded-2xl px-4 py-2 text-gray-900 text-base transition-smooth placeholder-gray-400;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    font-weight: 500;
  }

  .input:focus {
    @apply ring-2 outline-none;
    border-color: var(--color-brand-1);
    ring-color: color-mix(in srgb, var(--color-brand-1) 20%, transparent);
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-brand-1) 10%, transparent);
    transform: scale(1.01);
  }

  .input:hover {
    border-color: color-mix(in srgb, var(--color-brand-1) 30%, #d1d5db);
    transform: scale(1.005);
  }
}